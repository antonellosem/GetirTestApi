<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="INVALID_ACCOUNT_ID" xml:space="preserve">
    <value>The account identifier is not valid. There's no customer for the account selected.</value>
  </data>
  <data name="INVALID_CUSTOMER_BDATE" xml:space="preserve">
    <value>The customer birth date is not valid. Customer must be older than 17 years old.</value>
  </data>
  <data name="INVALID_CUSTOMER_IBAN" xml:space="preserve">
    <value>The customer IBAN has not a valid format.</value>
  </data>
  <data name="INVALID_CUSTOMER_ID" xml:space="preserve">
    <value>The customer identifier is not valid. There's no customer for the id selected.</value>
  </data>
  <data name="INVALID_CUSTOMER_NID" xml:space="preserve">
    <value>The customer national identifier is already existing in our archives. Please make sure to register a new customer.</value>
  </data>
  <data name="INVALID_FROM_TO" xml:space="preserve">
    <value>The date range is not valid.</value>
  </data>
  <data name="MISSING_ACCOUNTYPE" xml:space="preserve">
    <value>The customer account type si missing.</value>
  </data>
  <data name="MISSING_ACCOUNT_ID" xml:space="preserve">
    <value>The account identifier is missing.</value>
  </data>
  <data name="MISSING_CUSTOMER_BDATE" xml:space="preserve">
    <value>The customer birth date is missing.</value>
  </data>
  <data name="MISSING_CUSTOMER_FIRSTNAME" xml:space="preserve">
    <value>The customer first name is missing.</value>
  </data>
  <data name="MISSING_CUSTOMER_ID" xml:space="preserve">
    <value>The customer identifier is missing.</value>
  </data>
  <data name="MISSING_CUSTOMER_LASTNAME" xml:space="preserve">
    <value>The customer last name is missing.</value>
  </data>
  <data name="MISSING_CUSTOMER_NID" xml:space="preserve">
    <value>The customer national identifier is missing.</value>
  </data>
  <data name="MISSING_DATE_FROM" xml:space="preserve">
    <value>The date of range start is missing.</value>
  </data>
  <data name="MISSING_DATE_TO" xml:space="preserve">
    <value>The date of range end is missing.</value>
  </data>
  <data name="MISSING_IBAN" xml:space="preserve">
    <value>The customer IBAN for the current account is missing.</value>
  </data>
  <data name="MISSING_TRANSACTION_AMOUNT" xml:space="preserve">
    <value>The amount of the transaction is missing.</value>
  </data>
  <data name="MISSING_TRANSACTION_ISFLAG" xml:space="preserve">
    <value>Is Withdrawal flag is missing and it's required to define a transaction.</value>
  </data>
  <data name="MISSING_USER" xml:space="preserve">
    <value>The user responsible to create a customer is missing.</value>
  </data>
  <data name="TRANSACTION_AMOUNT_DECIMALS" xml:space="preserve">
    <value>The transaction amount cannot have more than 2 decimal places.</value>
  </data>
  <data name="TRANSACTION_AMOUNT_OUTOFRANGE" xml:space="preserve">
    <value>The transaction amount is invalid because it's out of range.</value>
  </data>
</root>